from __future__ import annotations
from aiogram import Router, F
from aiogram.types import Message
from ..middlewares.admin import AdminMiddleware
from ..db import repo

router = Router(name="admin")


@router.message(F.chat.type == "private", F.text == "üöÆ –£–¥–∞–ª–∏—Ç—å –ª—é–±–æ–µ –∑–∞–¥–∞–Ω–∏–µ")
async def admin_delete_prompt(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤–∏–¥–∞: del <assignment_id>")


@router.message(F.chat.type == "private", F.text.regexp(r"^del\s+\d+$"))
async def admin_delete_do(message: Message):
    assignment_id = int(message.text.split()[1])
    ok = await repo.admin_delete_assignment(assignment_id)
    await message.answer("–£–¥–∞–ª–µ–Ω–æ ‚úÖ" if ok else "–ù–µ –Ω–∞–π–¥–µ–Ω–æ / —É–∂–µ –∑–∞–∫—Ä—ã—Ç–æ.")


@router.message(F.chat.type == "private", F.text == "üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å –ë–î")
async def export_db(message: Message):
    await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ pg_dump –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ë–î (PostgreSQL).")
